name: Forbidden Fruit Action

on: [pull_request]

jobs:
  code_performance:
    name: Code Performance Optimisation
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
    steps:
      - name: Codebase Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0'
          bundler-cache: true
          cache-version: 1
      - name: Run code performance optimisation
        run: |
          ruby ./.github/workflows/scripts/code_performance.rb $GITHUB_TOKEN ${{ github.event.repository.full_name }} ${{ github.event.pull_request.number }} $GPT_API_KEY
        shell: bash
        working-directory: .
  code_review:
    name: Code Review
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
    steps:
      - name: Codebase Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0'
          bundler-cache: true
          cache-version: 1
      - name: Run code review
        run: |
          ruby ./.github/workflows/scripts/code_review.rb $GITHUB_TOKEN ${{ github.event.repository.full_name }} ${{ github.event.pull_request.number }} $GPT_API_KEY
        shell: bash
        working-directory: .
  generate_unit_test:
    name: Generate Unit Test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
    steps:
      - name: Codebase Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0'
          bundler-cache: true
          cache-version: 1
      - name: Run unit test generation
        run: |
          ruby ./.github/workflows/scripts/code_generate_unit.rb $GITHUB_TOKEN ${{ github.event.repository.full_name }} ${{ github.event.pull_request.number }} $GPT_API_KEY
        shell: bash
        working-directory: .
  generate_pr_description:
    name: Generate PR Description
    runs-on: ubuntu-latest
    if: github.event.pull_request.body == ''
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
    steps:
      - name: Codebase Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0'
          bundler-cache: true
          cache-version: 1
      - name: Run PR generation
        run: |
          ruby ./.github/workflows/scripts/auto_generate_pr_description.rb $GITHUB_TOKEN ${{ github.event.repository.full_name }} ${{ github.event.pull_request.number }} $GPT_API_KEY
        shell: bash
        working-directory: .
